name: "Pipeline"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/pipeline.yml'
      - 'get_cookies/**'
      - 'tests/**'
      - 'poetry.lock'
      - 'pyproject.toml'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Generate lambda artifact
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
          poetry run pytest
          poetry build
          poetry run pip install --upgrade --platform manylinux2014_aarch64 --only-binary=":all:" -t package dist/*.whl
          cd package
          zip -qr ../lambda.zip . -x '*.pyc'
      - name: Archive artifact
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          path: lambda.zip
          if-no-files-found: error

  deploy:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download lambda archive
        uses: actions/download-artifact@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::075673041815:role/external/deployer
      - name: Deploy Lambda
        run: aws lambda update-function-code --function-name get-cookies --zip-file fileb://artifact/lambda.zip
